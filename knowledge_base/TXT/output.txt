 In today's video, we're going to look at one of my favorite pieces of software, SyncThink. SyncThink is a free, open source file syncing solution for Mac, Windows, Linux, BSD, Solaris, Android, but sadly not for iOS, and I will talk a little bit about workarounds for iOS later in the video. So the purpose of today's video is to show you how to get up and running this SyncThink, how to install it, how to pair your machines together, how to share files and so on and so forth. But before we dive into the installation steps, I just want to talk about two characteristics of SyncThink that I think make it a really interesting solution for syncing and is the reason why I use it over something like Dropbox or iCloud. So the first characteristic is that SyncThink uses peer-to-peer syncing. What this means is that your machines talk to each other directly and they share files with each other directly. There's no centralized server, which is what you have with iCloud or Dropbox where each machine sends to the central server and then the central server sends on to the rest of machines in your little file sharing network. The benefit of peer-to-peer is that you're not beholden on a central service or a central server or even a central service provider. So if Dropbox decides to shut down their service one day and you use Dropbox for syncing, you are in a mess. Also if Dropbox just has an outage, you can't sync your files. You don't get that with peer-to-peer syncing. Even if one machine is not working, the rest of the machines can still talk and obviously because SyncThink is free and open, you are in complete control over your Sync network. So in certain cases, two peers in your network can't talk to each other, so they transmit data via a relay and this brings me onto the second characteristic of SyncThink that I real like, which is that the data is end-to-end encrypted. It gets encrypted on the client that transmits the data and then decrypted on the client that receives it. There's no bit in between where the data is decrypted. Contrast this with solutions like iCloud or Dropbox or Google Drive where data is encrypted in transit, so between your machine and the central server and it's encrypted at rest or when it's been stored on the central server. But there's the small window when the data arrives from transit and before it's written to storage where it's actually decrypted. And your mileage may vary on how much of an issue that is and certainly end-to-end encryption is something to strive for but it's not absolutely necessary. I feel much more comfortable with my data being a network that I completely control touching only my machines and always flowing end-to-end encrypted between those machines. One of the very nice things about SyncThink though is it's not all on nothing solution. You can still use it alongside your other file syncing solutions and we'll see it later on when we look at how to make SyncThink work alongside iOS by plugging it into iCloud. For now let's dive straight into installation. So to install a Mac you've got two main options you can install using HomeBrew which if you are using that that's a great way to install it and I've got a video on that up above. If you're not using HomeBrew and you just want to dive straight into SyncThink then come to SyncThink website, come to the downloads page and what you want to do is download this SyncThink Mac OS application bundle. This is the easiest and nicest way to use SyncThink on the Mac. Click on that to be brought to the downloads page and then download this DMG image here. Your version may differ if you're watching this at some point in the future. Once that downloads come to your download section click on the DMG image to mount it and then drag the SyncThink icon into applications. Once that's inside applications if you open up your applications folder find the SyncThink icon double click on it, choose Open and you'll see that a little SyncThink icon pops up in the top corner here and we'll revisit that shortly when we look at how the control panel works. Now let's see how to install on Linux. So on Linux you'll like this to find that SyncThink is in your package manager so it's a really easy installation. I'm here on a bug two so I'm just going to do a Studio app to install SyncThink. It doesn't take very long to install. Once that's installed you now need to start SyncThink and if you're using an operating system that has system D then you can do Studio, System CTL, Start SyncThink and it failed and the reason for this is SyncThink is not a service that you run just once on your machine you run it once per user so instead of running System CTL Start SyncThink use do start and then at the user in question. I'm user parallels because I'm running this on my virtual machine so that started that if you want to chip where you're using the image you can just run who am I like that until you're in parallels and you may also want SyncThink to start when the machine starts so rather than just running start here we'll also run enable so this one now also starts SyncThink for my parallel user when the machine boots. Okay great let's turn our attention now to Windows. So on Windows come to the SyncThink downloads page again and rather than choosing SyncThink Mac OS choose this Sync Traysor this is a really nice wrapper around the default SyncThink binary that gives you kind of like a tray icon and a file system watch and launch and all that kind of stuff it makes SyncThink feel much more like a Windows app so click on that scroll down here to the setup XE for your platform so you'll want X86 or X64 because I'm using SyncThink on ARM I can't actually use this package I'm going to install a different package but download that and install it and then you'll get to basically the same situation that I'm in. If you're on ARM what you want to do instead is come down to base SyncThink here and choose one of the base Windows packages I'm on ARM 64 and download that to open file choose file explorer come in here run SyncThink and it will say that this is an application that's in a compressed folder so you can just choose extract all extract them all and now run SyncThink again when you first try to run it Windows Defender will complain you need to tell it it's absolutely fine so the button here says don't run you actually have to click on more info and then you can choose run it anyway and then choose allow access and there we go we've got SyncThink running now when you run this default Windows package you are running just a SyncThink app if you reboot Windows it doesn't restart I will link below some instructions on how you can mount this as a Windows service so it will automatically start but if you can if you're on x86 or x8664 you should try to use Sync Trays or it's a much nicer experience so now we've got three machines running SyncThink Windows Ubuntu and Mac now it's time to configure each of those machines and actually start to pair them and the way this works inside of SyncThink is you use the admin console and the admin console is accessible via the browser and it's on each machine it's available at local host colom 8384 the first time you run it we'll ask if you want to allow an on-miss reporting I never do and it will also tell you that a username and password has not been set for GUI authentication by default you can only access the control panel from the machine that SyncThink is installed on so you don't necessarily need a username and password when you're in that setup if you choose to make the control panel available to other machines which you can do then you should definitely set a username and password however I think there's a nicer solution and we'll see that a little bit later so I'm just going to click okay for now and let's make this a little bit bigger that's perfect so you can see there's kind of three areas here there's an area where folders are so the nice thing about SyncThink is you can pick exactly which folders you want to share and exactly which machines it's not like iCloud or Dropbox where you have one big massive folder you have to share everything you can pick and choose where you want these files to come from and where on the machine you want them to go and we'll see some examples shortly there's a bunch of information about the machine itself what the download and not like rate is how much is being shared there's this identification token this is really important this is how machines find each other how you share one machine with another we'll see some more examples of that soon and then when we have a remote device it will show up down here up in the top corner here where it says actions you can find settings you can restart so on and so forth and then if you come into settings one of the things you can do in this GUI section here is set a username and password if you do want to enable all the machines to access this control panel you can take where it says 127001 here and change it to 0000 like that i recommend not doing that and we'll see it on turns if very soon so i've got my machine here on windows and i want to pair it say with my Ubuntu machine so i'm going to choose ad remote device and it's already found those two devices when you have SyncThink running on multiple machines on the same network they will automatically see each other so this is a really nice way of pairing machines if you can do them all on the same network you kind of just get this helper where machines are not on the same network they don't automatically see each other and we'll see an example soon of how you can pair machines in that situation i don't know which of these is my Ubuntu machine so i'm going to switch back into that and then i'll open the control panel here as well again local host 8384 let's also make that a little bit nicer to read so you can see similar control panel just a different device name and a different identification and i can see that the identification for this is as yfz0 so let's come back to windows and we're going to pair with that machine as yfz0 and you can see the real IDs much longer but when using on the local network they use the short IDs i'm going to press on that i can give it a device name so i'll say that's my Ubuntu Ubuntu and press save so when you first create it it says disconnected unused and that's because you haven't yet paired the machines together you have to when pairing machines and also when sharing folders you have to offer it on one side and accept it on the other side so we come back to Ubuntu now what we see is that this little pop-up here says oh this new device wants to share with you wants to connect with you so i'm going to choose add device i can give this a name i'm just going to call it windows i save so now it says you're connected to windows so now when i can windows it says that my Ubuntu is connected but unused and it's unused because we haven't yet shared a folder so let's now share some folders now i like to get rid of the default folder so i just come to edit on that and press remove yes and instead i'll add a custom folder so pressing the add folder button you can give it a custom label but we'll change that in a second the most important thing for me is the folder path where's the data coming from i don't want this randomly generated one i want a folder from actual windows and i want to share my windows documents folder i'm just going to call it documents and there are a bunch of other settings that will revisit in a second the most important one for me is file versioning but we'll see that soon but you do want to come to sharing and choose which device are you sharing this folder with so let's share it with Ubuntu press save so that says document is up to date here and now if i come back to my Ubuntu machine i'm now prompted do you want to share the folder documents with the machine windows so click add and it brings up a similar dialog now i get to choose the values of that documents folder on this machine and i could if i wanted to put it somewhere completely separate maybe i want to put it under sync like this and have it separate from my documents folder but no i'm going to use the default documents folder for now press save and i will just quickly clean up the default folder here also so now we've got a documents folder here and there's nothing in it so let's put something in it say on the Ubuntu side and we'll see it appear on the windows side so to do that i'm just going to bring up my terminal and i'm going to come into my documents folder let's just say echo hello into a test.txt file and i can just check that that is there on this machine yeah great and if i come back to the control panel so i have to see some action now what you want to see here is that in reskans it gives you the period how often is it going to do a full reskin of the folder but you most want to see this this little i icon this says that sync thing is watching for file changes using your operating systems watch support so it will detect changes far faster if you don't see that little i icon with the enabled next to it you need to install some additional software and i will link below what that software is i find now that most machines have file watching enabled by default so you don't really have to do it very often and you can now see that the global state and the local state show that there's one file which is sick spites and it also shows that my windows device is up to date and it took maybe three or four seconds to find that i am not quite sure it usually happens well within 10 seconds to sync the files together if we come back to windows we'll see similar data on this side so it's saying that i'm up to date the global state and the local state are the same and it also shows you like what was the last thing that happened so the latest change is that i updated text dot txt and just to show let's come to the documents folder we can see test txt here i'm not hoping it was notepad and there it is hello so now we've got two machines talking to each other and they're sharing a folder let's add a third machine into the mix and i'm going to add my personal Mac into this little syncing network and if you look at the control panel from the Mac you can see i've already got a bunch of folders that i've shared and i've only got one remote device you might wonder why i'll tell you a little bit about that in a second but let's add a second device in come to our remote device i'm going to pick the a bunch of machine come on one two and before i press say i'm going to come to sharing and i'm going to make this the introducer and i want to be introduced to the other devices that the a bunch of machine knows i also want to auto accept folders that that machine is exposing will still need to go through and click a bunch of buttons but we don't have to specifically pair up with every single machine and every single folder so let's come to save come to the Ubuntu machine you still have to accept that pairing on this side so press add device which i'll leave the name as it is so now i've accepted the pairing on the Ubuntu machine and it says that the machine is unused but connected which is exactly right if we go back to the Mac we get the same thing it's connected but unused and i want to share a folder the documents folder between these two machines and we should see that the Mac links the windows machine as well because we made a bunch of an introducer so coming back into the Ubuntu machine come to the pairing with the Mac machine choose edit come to sharing and then share documents now i want to just show you one thing very interesting here the Ubuntu machine is able to expose the documents folder to the Mac because that's the folders it knows about if i come to the Mac and do the same thing come into the Ubuntu machine come to edit come to sharing you'll see it's able to expose its folders so it can get quite messy when you're trying to pair up all these folders especially if you've got some machines that only see some folders and some machines that say another but this is the power of something like you get complete control over what files go where what folders go where and what devices appeared but just something to be aware of coming back to Ubuntu let's allow the Mac to see documents press save so that's now up to date and if i come over to the Mac you'll see it's now got the documents folder because we auto accepted the documents folder so we didn't have to accept it and you'll see it's got windows down here now is disconnected so we've been introduced to the windows machine but it's not an auto pairing we still have to accept the pair on the windows machine this is just a part of the nature of how the n2n encryption works you are required to validate on both ends of the tunnel so come here with the windows machine you'll see it's popped up here new device do you want to allow so let's add device press save once we accept the pairing between the windows machine and the Mac machine windows is asked to do you want to share your documents folder with the Mac as well and this might seem a little bit counterintuitive at first because we've already shared documents with the Mac but we've only shared it from the Ubuntu machine because this is paired to paired not only do you have to accept each pairing relationship at the machine level you also have to accept it at the at the directory at the folder level as well so let's press share so now I've got this folder called documents I come into edit you can see that it's shared from this windows machine with these two machines so that's basically everything you need to know about pairing machines and sharing files on a local network before we turn our attention to dealing with machines that are remote towards and also deal with what happens when you leave your house and you're not on the same network let's just talk about two interesting configuration options one is how to ignore certain files for sharing and there is how to version files so we come back to the control panel just saying windows here come to documents and come into edit the first thing that I think it's interesting is file versioning so by default there's no file versioning whatsoever which means if you override a file then it's over in everywhere you can enable trash can file versioning which basically says keep file keep one copy the previous copy of a file in the trash can for as many days as you want and it's zero means forever that's the default by default all versions go into this ST versions directory but you can change that with the version path if you want you can also choose simple file versioning which is kind of the same as trash can versioning but you can have a fixed number of versions so I think the default is five and you can set as many as you want you can also choose staggered file versioning this is a little bit more complicated and you can see the text here that basically says for the first hour a version is kept every 30 seconds for the first day a version is kept every hour and for the first 30 days a version is kept every day I use this for most of my folders it gives you a good compromise between the accuracy of your versions but also not taking up to this space if your data is not that important you don't have to version it at all but my data is important so I typically version everything the other option for versioning is external file versioning where you can basically build your own command for handling the versioning I've never used this I think stack of file versioning is fine but just know that you can enable this versioning the other option is to ignore certain files and this is really really handy because often you get a load of junk files like temporary files in your folders and you don't want them to be synced around and you can do that here by creating these little patterns so one thing I like to do is I often call my files like .10 if I'm working on something temporarily so I'll add a star star that means any directory in the path any sub directory at all then a slash then another star .10 so anywhere in this directory where you see a file with a .10 extension just ignore it from syncing completely so one thing to bury in mind about both versioning and the ignore patterns is they are specific to the machine that you set them on so they're not like a global property so if you want to also ignore say here on the Ubuntu the same thing I have to come in and do the same pattern .tmp and I'll press save and now if I'd contest this from here so if I open up my terminal I'm in my documents folder already if we do echo hello to test .tmp and come over to the control panel and open up documents what you'll see is that there's still only one file and it says it's been reduced by the ignore patterns so this is a really nice way of making sure you're not just propagating too much data and also that you're not losing the data because you've able to version the files there are other advanced settings but these are the two most important ones that I find myself using I like I say do have versioning on pretty much every folder and I do have an extensive set of ignore patterns because you just get so much trash in your folders if you use them on a regular basis let's now look at how we deal with machines that are not on the local network how would I pair my sync thing with a machine that's in the cloud for example so I've already installed sync thing on a fedora machine running in linode cloud and I now want to bring it into my network now of course we can't access the GUI because the GUI is not accessible from external machines I could if I wanted to change that but I don't want to but I want to do instead is make an ssh tunnel from my local machine to the machine in the cloud and that way I can access the admin console or completely secure encrypted channel so to do that I'm going to come in and I'm going to ssh into the machine this is the IP address of my linode machine and then I'm going to add a dash L I'm going to create a tunnel I want the port on the Mac that I'm on the local machine to be 1 8384 you can try using 8384 but this max already running sync thing so it would clash so 1 8384 I want that to access local host on the machine I'm accessing so here local host doesn't mean the Mac it means this machine the one in linode and I wanted to go to 8384 on that machine and I should make sure I get that actually right okay cool so now we can do that and I'm connected to linode if I come over to my browser this is my local set up so it's Rob's MacBook Pro but I can also now access local host 1 8384 to access the linode setup now if I come to add remote device on here it's not going to find any devices because it's not on a network with any other sync thing machines I want to add one of my machines I'll just add my Mac in this case and I need to get the full device ID let's come over to the Mac let's click on identification I'm going to copy the full ID now I'm not going to blank these IDs out because they're not really sensitive because you need to obviously accept the pair on both sides you can keep yours private if you want the sync thing documentation is quite clear you don't need to worry about that too much so these will not be blanked out in the video coming over to the linode setup I'm going to paste the device ID in here we'll call that MVP, VP, press save if I click on it it's going to say disconnected unused and if I come over to the Mac close that down there we go it's popped up do you want to add the linode device press add now if I want to share one of these these directories with something in the cloud I might want to also encrypt it because that machine might be sensitive so you can add an extra layer of encryption here so let's say for example I want to share this documents folder I could choose a password here for and that way when you go to that machine you have to use this password to decrypt it I'm not going to bother for now I'm just going to leave that unencrypted I don't really use that very often so I will share that directory nonetheless press save come over to the linode do I want to share the documents folder yes I do press add press save and come in here and we can see it's up to date so it's only got one file and remember that my extra file over the Ubuntu side is being ignored so none of these machines are seeing that temporary file so that's the nice thing about the ignore patterns and I can just quickly come back into the shell here and see what folder I've got going to documents and there we see the test.txt file that we created before so at this point you could basically stop you've got a working sync thing installation you've got some folders shared you've got some machines paired you're able to access machines that are remote and if you take your laptop out of the house it's just acting like that machine that we've got a linode it's able to connect back to your house and you might be wondering how is that working these machines appear to appear how is the machine in the cloud accessing the machine in the house and this is what I talked about earlier on right at the start of the video this idea of a relay sync thing has a set of public relays and when two machines can't connect to each other they can use a relay as a as a middle middle point the data is still end to end encrypted but they both talk via the relay relays are very convenient because they just work out the box they are quite a bit slower and you have to decide how comfortable you are with the slight tradeoff of people not seeing your data but they are seeing your metadata they're seeing your IP addresses and they're seeing the pairing of the the IP addresses to the IDs and also which machines are talking to each other I don't use the relays instead I open up ports on my firewall to enable machines to talk to each other so let's see how to do that the first thing we need to do to make our Mac and the remote machine talk without using a relay is change the listen addresses for our Mac these are the addresses it will actually receive sync traffic on but these are also the addresses it publishes to the world and right now it's publishing that's going to use a relay so let's come into actions come to settings come to connection to here and where it says default under sync protocol listen address changes to TCP colom slash slash colom 22001 now I've chosen this this is the port number 22001 I've chosen this for a very specific reason if you've got multiple machines in your network that you want external traffic to hit you have to give them all a different port number because that port number then has to be exposed on your router the default port is 2200 and if you only have one device that's living in your house that you want external devices to access you can leave it as a default port that's fine when you have multiple devices inside your house that you want external devices to access you need to give them all a unique port because that unique port has before you're on your router so we're going to use 22001 for this machine and for every other machine I do this for I would give it a different port number so that's absolutely fine press save well I'm in these settings I also like to disable relaying so I'm going to uncheck enable relay here and press save so if I come back over to Leno now and look at the state of the MacBook Pro connection you can see it says disconnected if you expand it you'll see that all the addresses report no network activity and the reason for this is although we've changed the list and address on the MacBook we haven't yet opened up a port on our router to let that traffic come through that's the final step you have to do to make this work how you do this is going to be very specific to your router model I will show you how I do it in my unify set up so you get an idea of what has to be done but the actual UE will be different for you so I'm going to come into my unifying and I'm going to come to the add new port forwarding rule I'm just going to call this ST MVP and I want to forward 22001 which is the port that is specified before and the IP address I want to 42 is 1921681 125 that's the IP address of this MacBook I'm going to forward it again to 22001 like that click apply changes and then very quickly you see that the linoid is able to connect so it's now able to punch through the firewall through that that port forward and connect to my MacBook but not using a relay so let's now just talk very briefly about topology the kind of the layout of the syncing network you can create with your machines using sync thing as you've seen every device has to be paired with every other device if you want them all to share peer-to-peer and every folder has to be shared explicitly between every device in that network and that can get owners quite quickly also if you want to expose every device in your house to the external world and you don't want to use a relay that every device has to be given a unique port that port has to be forwarding on your firewall that can be quite a lot of admin to do what I've opted to do instead is to designate one machine in this case my NAS as my central hub I pair every machine with the NAS but not with each other this gives me a much simpler setup it means that every machine only has to pair with the NAS and only has to share folders with the NAS but it also means that only the NAS is exposed on the file I don't have to expose every single device in the machine that I use so you do lose a little bit of reliability with this setup obviously if the NAS goes down then the machines are not syncing with each other but you can just lazily add any peer relationships you want during that time of the outage on your NAS this is a really nice thing about sync thing the topology is so fluid that you can have full hub and spoke full peer-to-peer a hybrid you can move between them as you need to you never fixed in one shape and just to make things even easier most NAS software does have a sync thing package so I'm currently using a Synology NAS there's a sync thing package for that I know that QNAP have a sync thing package I'm moving and building a new NAS on top of true NAS you can run sync thing on that so pretty much sync thing is everywhere but that brings me back to the important topic of what to do about iOS and it's very frustrating that there is no sync thing on iOS and if you look on the app store you will see there is a third party app called Mobius Sync which I have and I've tried it out it does look like development on that has stopped so I don't recommend buying it there are thankfully two to me at least reasonable workarounds so I think the simplest way to get iOS and sync thing working together is to use iCloud as kind of like a bridge what I mean by this is you set up sync thing to sync your iCloud drive and let me show you how I've done that so in my folders here I've got this iCloud and the only thing you need to know is the special path where the iCloud drive kind of is shown in your file system so if I just open up this in edit you can see that it's in under my home directory it's in library, mobile documents, com, apple, cloud docs and you can just treat this like any other folder inside of sync thing I've tested this for many many weeks and it works just fine but you still have to run iCloud and I really don't want to have to run iCloud at all so the second solution but what I'm only just testing is whether or not next cloud can be used as a front end on top of the sync thing files and what I mean by this is I've installed next cloud on my NAS it's got access to all the folders that are synced to the NAS over sync thing and because the iPhone and the iPad have a really nice next cloud client they too can access those files it's not a perfect solution and I still am ironing out some kinks but I do think it will be the best solution until hopefully sync thing is natively supported on iOS so there we go that's everything that I think you need to know to get up and running with a proper sync thing installation how to pair machines how to share folders how to set up remote access how to pair with remote machines how to even interface with things like iCloud this reflects my set up that I've been using every day for the last well over a year and I've had no issues with it I do wish there was a smoother integration with iOS and an iPad but I can work around that with the iCloud sync I can work around that with the next cloud sync and hopefully in the future we'll see you native sync thing on iOS I hope you found this video useful I hope you found it entertaining if so please hit like please hit subscribe and maybe hit the bell as well so you don't miss out on any future content thanks so much for watching and I'll see you in the next video